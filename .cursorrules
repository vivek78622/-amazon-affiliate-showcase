# Cursor Rules

## Instructions
— Record fixes for mistakes or corrections to avoid repetition in the 'Lessons' section.
— Organize thoughts and plan steps before starting a task in the 'Scratchpad' section.
— Clear old tasks if necessary.
— Use todo markers for progress tracking:
'[X]' Completed tasks
'[ ]'Pending tasks
Update Scratchpad after completing subtasks.
Reflect and plan after milestones for better task management.
— Always refer to Scratchpad before planning the next step.

## Lessons
- (Record any lessons learned or fixes here)
- When installing dependencies for React 19, use --legacy-peer-deps flag to avoid peer dependency issues
- shadcn-ui package has been renamed to shadcn

## Scratchpad
- [X] Created Next.js app with TypeScript, Tailwind CSS, ESLint, App Router, src directory, and import alias (@/*)

### Phase 1: Project Setup and Configuration
- [X] Install and configure additional dependencies:
  - [X] shadcn-ui (for UI components)
  - [X] lucide-react (for icons)
  - [X] zod (for schema validation)
  - [X] zustand (for state management)
  - [X] recharts (for analytics charts)
  - [X] resend (for email)
  - [X] uploadthing (for file uploads)
  - [X] prisma (for database ORM)
  - [X] next-auth@beta (for authentication)
- [X] Set up PostgreSQL database
- [X] Configure environment variables
- [X] Set up Prisma schema and migrations
- [X] Configure authentication with next-auth
- [X] Set up project structure and folder organization

### Phase 2: Core Features Development
- [X] Implement authentication system:
  - [X] Admin login
  - [X] Role-based access control (Admin only)
  - [X] Password reset functionality
- [X] Create database models:
  - [X] Admin model
  - [X] Product model
    - [X] Amazon product link
    - [X] Product title
    - [X] Product description
    - [X] Product image
    - [X] Price
    - [X] Category
    - [X] Affiliate tracking ID
  - [X] Category model
  - [X] Click tracking model (for analytics)
- [X] Set up PostgreSQL database
- [X] Configure environment variables
- [X] Set up Prisma schema and migrations
- [X] Configure authentication with next-auth
- [X] Set up project structure and folder organization

### Phase 3: Customer-Facing Features
- [X] Develop homepage and layout:
  - [X] Hero section with featured products
  - [X] Category navigation
  - [X] Search functionality
  - [X] Newsletter signup
- [X] Implement product catalog:
  - [X] Product grid/list view
  - [X] Category-based filtering
  - [X] Search functionality
  - [X] Product cards with:
    - [X] Product image
    - [X] Title
    - [X] Price
    - [X] "View on Amazon" button
    - [X] Affiliate link tracking
- [X] Implement SEO features:
  - [X] Product schema markup
  - [X] Meta tags
  - [X] Sitemap
  - [X] Robots.txt

### Phase 4: Admin Dashboard
- [X] Create admin layout and navigation
- [X] Implement dashboard analytics:
  - [X] Click tracking
  - [X] Product performance
  - [X] Category performance
  - [X] Revenue tracking
- [X] Develop product management:
  - [X] Add/Edit products
    - [X] Amazon product link input
    - [X] Product details
    - [X] Category assignment
    - [X] Image upload
  - [X] Category management
  - [X] Bulk product import/export
- [X] Implement affiliate tracking:
  - [X] Click tracking
  - [X] Revenue reports
  - [X] Performance analytics

### Phase 5: Additional Features
- [X] Set up email notifications:
  - [X] Newsletter subscription
  - [X] Marketing emails
- [X] Implement file upload system:
  - [X] Product images
  - [X] Category images
- [X] Add SEO optimization:
  - [X] Dynamic meta tags
  - [X] Product schema markup
  - [X] Category pages
  - [X] Search optimization

### Phase 6: Testing and Optimization
- [X] Write unit tests
- [X] Perform integration testing
- [X] Conduct performance optimization:
  - [X] Image optimization
  - [X] Code splitting
  - [X] Caching strategies
- [X] Implement error handling and logging
- [X] Add loading states and animations

### Phase 7: Deployment and Launch
- [X] Set up production environment
  - [X] Configure Vercel deployment
  - [X] Set up environment variables
  - [X] Configure production database
- [X] Configure CI/CD pipeline
  - [X] Set up GitHub Actions
  - [X] Configure automated testing
  - [X] Set up deployment workflows
- [X] Perform security audit
- [X] Create backup strategy
  - [X] Database backups
  - [X] File storage backups
  - [X] Automated backup scheduling
- [X] Plan launch strategy
  - [X] Create launch checklist
  - [X] Define marketing activities
  - [X] Set up monitoring tools
- [X] Monitor and maintain
  - [X] Set up error tracking
  - [X] Configure performance monitoring
  - [X] Implement logging system

### Current Focus
- [X] Complete deployment and launch phase
- [X] Set up monitoring and maintenance systems
- [X] Implement backup strategy
- [X] Manual tasks required:
  - [X] Configure Vercel environment variables (via verify-env script)
  - [X] Set up GitHub repository secrets (via setup-secrets script)
  - [X] Run initial backup and monitoring tests (via post-deploy script)
  - [X] Fill in contact information in LAUNCH_CHECKLIST.md
- [X] Begin post-launch monitoring and maintenance

### Next Steps
1. Run the deployment process:
   ```bash
   npm run pre-deploy
   npm run deploy
   npm run post-deploy
   ```

2. Monitor the deployment:
   - Check Vercel deployment logs
   - Verify GitHub Actions workflow
   - Monitor application health
   - Review backup logs
   - Check monitoring dashboard

3. Regular maintenance tasks:
   - Daily: Review monitoring logs
   - Weekly: Verify backups
   - Monthly: Security audit
   - Quarterly: Performance review

# Windows (with scoop)
scoop install gh

# Or download from https://cli.github.com/

gh auth login

# Database
DATABASE_URL="postgresql://username:password@localhost:5432/sameweb"

# Authentication
NEXTAUTH_SECRET="your-secret-key"
NEXTAUTH_URL="http://localhost:3000"

# Email
RESEND_API_KEY="your-resend-api-key"

# AWS (for backups)
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_BACKUP_BUCKET="your-backup-bucket"
AWS_REGION="your-aws-region"

# App
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Monitoring
SENTRY_DSN="your-sentry-dsn"
